import React, { useEffect } from 'react';
import { View, Text, ActivityIndicator } from 'react-native';
import {styles} from '../themes/dark';
import { LineChart } from 'react-native-chart-kit';
import { Dimensions } from 'react-native';

interface HomeScreenProps {
  navigation: any;
}

interface ChartData {
  labels: string[];
  datasets: {
    data: number[];
  }[];
}

const HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {
  const [isLoading, setIsLoading] = React.useState(true);
  const [error, setError] = React.useState();
  const [response, setResponse] = React.useState();
  const [stockSymbol, setStockSymbol] = React.useState('AAPL');
  const [chartData, setChartData] = React.useState<ChartData>({
    labels: ["Default 1", "Default 2"],
    datasets: [
      {
        data: [
          Math.random() * 100,
          Math.random() * 100,
        ]
      }
    ]
  });

  const myApiKey = 'IHIH95YS4SPW4FI8';
  
  useEffect(() => {
    fetch('https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=AAPL&interval=5min&apikey=IHIH95YS4SPW4FI8')
      .then(res => res.json())
      .then(
        (result) => {
          setIsLoading(false);
          setResponse(result);

          console.log('The Result', result)

          const timeSeries = result['Time Series (5min)'];

          console.log('timeseries', timeSeries)

          const getlabels = Object.keys(timeSeries).reverse();

          console.log('labels', getlabels)

          const getdata = getlabels.map(timestamp => {
                const closeValue = timeSeries[timestamp]['4.close'];
                return parseFloat(closeValue);
              }
            );
          console.log('Data',getdata)
          setChartData({
            labels: getlabels,
            datasets: [
              {
                data: getdata
              }
            ]
          })
        },

        (error) => {
          setIsLoading(false);
          setError(error);
          console.log(error);
        }
      )

  }, []);

  const getContent = () => {
    if (isLoading) {
      return <ActivityIndicator size='large'/>
    }

    if (error) {
      return <Text>{ error }</Text>
    }
    
    console.log(chartData)
    return <LineChart
      data={{
        labels: ["Default 1", "Default 2"],
        datasets: [
          {
            data: [
              Math.random() * 100,
              Math.random() * 100,
            ]
          }
        ]
      }}
      width={Dimensions.get("window").width} // from react-native
      height={220}
      yAxisLabel="$"
      yAxisSuffix="k"
      yAxisInterval={1} // optional, defaults to 1
      chartConfig={{
        backgroundColor: "#e26a00",
        backgroundGradientFrom: "#fb8c00",
        backgroundGradientTo: "#ffa726",
        decimalPlaces: 2, // optional, defaults to 2dp
        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,
        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,
        style: {
          borderRadius: 16
        },
        propsForDots: {
          r: "6",
          strokeWidth: "2",
          stroke: "#ffa726"
        }
      }}
      bezier
      style={{
        marginVertical: 8,
        borderRadius: 16
      }}
    />
  }


  return (
    <View style={styles.home}>
      <Text>Home Screen</Text>
      {getContent()}            
    </View>
  )
};


export default HomeScreen;
